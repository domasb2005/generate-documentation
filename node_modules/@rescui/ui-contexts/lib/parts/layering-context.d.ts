import React from 'react';
interface LayeringInfo {
    baseZIndex: number;
    isInPortal: boolean;
    popupZIndex: number;
    dropdownZIndex: number;
    tooltipZIndex: number;
}
export declare class LayeringContextValue implements LayeringInfo {
    readonly baseZIndex: number;
    readonly isInPortal: boolean;
    readonly popupZIndex: number;
    readonly dropdownZIndex: number;
    readonly tooltipZIndex: number;
    constructor(baseZIndex: number, isInPortal?: boolean);
}
export declare const LayeringContext: React.Context<LayeringContextValue>;
export declare const LayeringConsumer: React.Consumer<LayeringContextValue>;
export declare const useLayeringContext: () => LayeringContextValue;
/**
 * @deprecated use `useLayeringContext` hook instead
 * */
export declare const withLayering: <P extends Partial<LayeringInfo>>(WrappedComponent: React.ComponentType<P>) => React.ComponentType<P>;
export {};
