import { Theme } from '@rescui/ui-contexts';
export declare type Texts = 'rs-text-1' | 'rs-text-2' | 'rs-text-3';
export declare type Link = 'rs-link';
export declare type OrderedList = 'rs-ol';
export declare type UnorderedList = 'rs-ul';
export declare type Subtitles = 'rs-subtitle-1' | 'rs-subtitle-2';
export declare type Digits = 'rs-digits-1' | 'rs-digits-2';
export declare type SubtitlesAndDigits = Subtitles | Digits;
export declare type Others = 'rs-super-hero' | 'rs-middle-hero' | 'rs-hero' | 'rs-h1' | 'rs-h2' | 'rs-h3' | 'rs-h4' | 'rs-h5' | 'rs-overline' | 'rs-pre' | 'rs-code';
export declare type Type = Texts | Link | OrderedList | UnorderedList | SubtitlesAndDigits | Others;
export declare type Hardness = 'average' | 'hard' | 'pale';
export declare type TextsParams = {
    /**
     * @default false
     */
    paragraphOffsetAuto?: boolean;
    /**
     * @default average
     */
    hardness?: Hardness;
};
export declare type SubtitlesAndDigitsParams = {
    /**
     * @default hard
     */
    hardness?: Hardness;
};
export declare type Mode = 'classic' | 'rock' | 'clear' | 'standalone';
export declare type LinkParams = {
    /**
     * @default false
     */
    external?: boolean;
    /**
     * @default null
     */
    hardness?: Hardness;
    /**
     * @default classic
     */
    mode?: Mode;
};
export declare type Alpha = 'lower' | 'upper';
export declare type OffsetItems = 8 | 12 | 16 | 24;
export declare type OrderedListParams = {
    /**
     * @default null
     */
    alpha?: Alpha;
    offsetItems?: OffsetItems;
};
export declare type UnorderedListParams = {
    offsetItems?: OffsetItems;
};
declare type MapParams<Types extends string, Params extends Record<string, unknown>> = {
    [T in Types]: Params;
};
/**
 * The example of the map content:
 * ```
 * {
 *   'rs-text-1': TextsParams,
 *   'rs-text-2': TextsParams,
 *   'rs-text-3': TextsParams,
 *   'rs-subtitle-1': SubtitlesAndDigitsParams,
 *   // ...
 * }
 * ```
 */
export declare type TypeToParams = MapParams<Texts, TextsParams> & MapParams<SubtitlesAndDigits, SubtitlesAndDigitsParams> & MapParams<Link, LinkParams> & MapParams<OrderedList, OrderedListParams> & MapParams<UnorderedList, UnorderedListParams> & MapParams<Others, never>;
export declare function createTextCn(theme?: Theme): {
    <T extends Texts | SubtitlesAndDigits | Others | "rs-link" | "rs-ol" | "rs-ul">(type: T, params?: TypeToParams[T]): string;
    (type: Texts, params?: TextsParams): string;
    (type: SubtitlesAndDigits, params?: SubtitlesAndDigitsParams): string;
    (type: Link, params?: LinkParams): string;
    (type: OrderedList, params?: OrderedListParams): string;
    (type: UnorderedList, params?: UnorderedListParams): string;
    (type: Others): string;
};
export declare const textCn: {
    <T extends Texts | SubtitlesAndDigits | Others | "rs-link" | "rs-ol" | "rs-ul">(type: T, params?: TypeToParams[T]): string;
    (type: Texts, params?: TextsParams): string;
    (type: SubtitlesAndDigits, params?: SubtitlesAndDigitsParams): string;
    (type: Link, params?: LinkParams): string;
    (type: OrderedList, params?: OrderedListParams): string;
    (type: UnorderedList, params?: UnorderedListParams): string;
    (type: Others): string;
};
export declare const useTextStyles: () => {
    <T extends Texts | SubtitlesAndDigits | Others | "rs-link" | "rs-ol" | "rs-ul">(type: T, params?: TypeToParams[T]): string;
    (type: Texts, params?: TextsParams): string;
    (type: SubtitlesAndDigits, params?: SubtitlesAndDigitsParams): string;
    (type: Link, params?: LinkParams): string;
    (type: OrderedList, params?: OrderedListParams): string;
    (type: UnorderedList, params?: UnorderedListParams): string;
    (type: Others): string;
};
export declare const colorCn: (color: Hardness | 'base') => any;
export {};
