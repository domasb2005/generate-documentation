## Usage Examples

### `useGlowHover` Examples

#### Basic Usage (Default Settings)
```jsx
import React from 'react';
import { useGlowHover } from '@rescui/use-glow-hover';

function MyComponent() {
  const glowRef = useGlowHover({});

  return (
    <button ref={glowRef}>
      Hover Me (Default Glow)
    </button>
  );
}
```

#### Using a Preset
```jsx
import React from 'react';
import { useGlowHover } from '@rescui/use-glow-hover';

function MyComponent() {
  const glowRef = useGlowHover({ preset: 'bright-magenta' });

  return (
    <button ref={glowRef}>
      Hover Me (Bright Magenta Preset)
    </button>
  );
}
```

#### Custom Configuration
```jsx
import React from 'react';
import { useGlowHover } from '@rescui/use-glow-hover';

function MyComponent() {
  const glowRef = useGlowHover({
    lightColor: 'red',
    lightSize: 50,
    hoverBg: 'lightyellow',
    lightSizeEnterAnimationTime: 300,
    lightSizeLeaveAnimationTime: 150,
    mode: 'sharp'
  });

  return (
    <button ref={glowRef}>
      Hover Me (Custom Glow)
    </button>
  );
}
```

### `glowHoverEffect` Examples

#### Basic Usage (Default Settings)
```js
import { glowHoverEffect } from '@rescui/use-glow-hover';

const element = document.getElementById('myElement');

if (element) {
  const cleanup = glowHoverEffect(element, { lightColor: 'lightblue' });

  // To remove the effect later:
  // cleanup();
}
```

#### Using a Preset
```js
import { glowHoverEffect } from '@rescui/use-glow-hover';

const element = document.getElementById('myElement');

if (element) {
  const cleanup = glowHoverEffect(element, { preset: 'transparent-strawberry' });

  // To remove the effect later:
  // cleanup();
}
```

#### Custom Configuration
```js
import { glowHoverEffect } from '@rescui/use-glow-hover';

const element = document.getElementById('myElement');

if (element) {
  const cleanup = glowHoverEffect(element, {
    lightColor: 'orange',
    lightSize: 75,
    hoverBg: 'lightcoral',
    lightSizeEnterAnimationTime: 200,
    lightSizeLeaveAnimationTime: 100,
    isElementMovable: true,
    enableBurst: true
  });

  // To remove the effect later:
  // cleanup();
}
```