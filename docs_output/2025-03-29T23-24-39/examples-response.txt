## Usage Examples

### `useGlowHover` Examples

#### Basic Usage (Default Settings)
```jsx
import React from 'react';
import { useGlowHover } from '@rescui/use-glow-hover';

function MyComponent() {
  const glowRef = useGlowHover({});

  return <button ref={glowRef}>Hover me</button>;
}
```

#### Using a Preset
```jsx
import React from 'react';
import { useGlowHover } from '@rescui/use-glow-hover';

function MyComponent() {
  const glowRef = useGlowHover({ preset: 'transparent-blue' });

  return <button ref={glowRef}>Hover me</button>;
}
```

#### Custom Configuration
```jsx
import React from 'react';
import { useGlowHover } from '@rescui/use-glow-hover';

function MyComponent() {
  const glowRef = useGlowHover({
    lightColor: 'rgba(255, 0, 0, 0.5)',
    lightSize: 50,
    lightSizeEnterAnimationTime: 200,
    lightSizeLeaveAnimationTime: 100,
  });

  return <button ref={glowRef}>Hover me</button>;
}
```

### `glowHoverEffect` Examples

#### Basic Usage (Default Settings)
```jsx
import React, { useEffect, useRef } from 'react';
import { glowHoverEffect } from '@rescui/use-glow-hover';

function MyComponent() {
  const buttonRef = useRef(null);

  useEffect(() => {
    if (buttonRef.current) {
      const cleanup = glowHoverEffect(buttonRef.current, {});
      return () => cleanup();
    }
  }, []);

  return <button ref={buttonRef}>Hover me</button>;
}
```

#### Using a Preset
```jsx
import React, { useEffect, useRef } from 'react';
import { glowHoverEffect } from '@rescui/use-glow-hover';

function MyComponent() {
  const buttonRef = useRef(null);

  useEffect(() => {
    if (buttonRef.current) {
      const cleanup = glowHoverEffect(buttonRef.current, { preset: 'bright-magenta' });
      return () => cleanup();
    }
  }, []);

  return <button ref={buttonRef}>Hover me</button>;
}
```

#### Custom Configuration
```jsx
import React, { useEffect, useRef } from 'react';
import { glowHoverEffect } from '@rescui/use-glow-hover';

function MyComponent() {
  const buttonRef = useRef(null);

  useEffect(() => {
    if (buttonRef.current) {
      const cleanup = glowHoverEffect(buttonRef.current, {
        lightColor: '#00FF00',
        lightSize: 75,
        hoverBg: 'lightblue',
        enableBurst: true
      });
      return () => cleanup();
    }
  }, []);

  return <button ref={buttonRef}>Hover me</button>;
}
```
